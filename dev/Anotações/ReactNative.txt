Componentes Basicos:     import { StyleSheet, Text, View, Scrollview } from 'react-native';

  <View> Semelhante a tag DIV no React / HTML </View>
  <Text> Semelhante a tag P no React HTML </Text>
  <Scrollview> Barra de Rolagem </Scrollview>

  const styles = StyleSheet.create({});   Adicionar Estilos

---------------------------------------------------------------------------------------------------

TextInput:   TAG de Formulario    import { TextInput } from 'react-native';

  <TextInput placeholder={} keyboardType={ Tipo de Teclado }/>

---------------------------------------------------------------------------------------------------

Pressable: 

---------------------------------------------------------------------------------------------------

FlatList:   Uma Lista não setorizada         import { FlatList } from 'react-native';

  conts nomeLista = [{A: 'AAA', B: 'BBB', id: 01}, {A: 'AAA', B: 'BBB', id: 02}, {A: 'AAA', B: 'BBB', id: 03}, {A: 'AAA', B: 'BBB', id: 04}]  

  <FlatList data={nomeLista} keyExtractor={item=>item.id} renderItem={({item}) => <Text>{}{}</Text>}/>

---------------------------------------------------------------------------------------------------

SectionList:

---------------------------------------------------------------------------------------------------

Imagens:     import { Image, ImageBackground } from 'react-native';

  <Image source={require( Buscar imagem )} resizeMode="center" accessible={true} accessibilityLabel={ Acessibilidade: Titulo da imagem }/>

  <ImageBackground/>   Usado para colocar uma imagem como papel de parede

---------------------------------------------------------------------------------------------------

Trabalhando com JSON:

const convertendoStringPraJson = () => { 
  const myStr = '[{"name": "Veggie Kabob", "price": "$12", "type": "Main Dish"}, {"name": "Greek Salad", "price": "$7","type": "Side"}, {"name": "Black Tea", "price": "$3", "type": "Drink"}]';

  const result = JSON.parse(myStr);
  funcaoUseState(result);  {/* -> Retornando para a função do useState */}
};

---------------------------------------------------------------------------------------------------

Trabalhando com API

  const api = "Link da API"

  const nomeFunção = async () => {
    try {
      const response = await fetch( api );
      const json = await response.json();
      funcaoUseState(json.menu); {/* -> Retornando para a função do useState */}
    } catch (error) {
      console.error(error);
    } finally {
      setLoading(false);
    }
  };

---------------------------------------------------------------------------------------------------

AsyncStorage:   npx expo install @react-native-async-storage/async-storage  -  import AsyncStorage from @react-native-community/async-storage

const [exemplo, setExemplo]=useState(null)

const Armazernar = (chave, valor) =>{AsyncStorage.setItem(chave, valor)}
const Buscar = async (chave) => {const valor await AsyncStorage.getItem(chave)   setExemplo(valor)}

---------------------------------------------------------------------------------------------------

SQLite:   NPX expo install expo-SQLite
