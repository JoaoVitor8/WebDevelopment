Comandos Basicos:
   Console.WhiteLine("Escreve um Texto no console e cria uma nova linha")
   Console.White("Escreve um Texto no console)
   Console.ReadKey();   Espera o usuario apertar ENTER para sair do console

   Ler Teclado
      string(Console.ReadLine(), out string txt)
      float.TryParse(Console.ReadLine(), out float num)
      int.TryParse(Console.ReadLine(), out int num)

          TryParse = Tente converte
      

   .ToLower()
   .ToUper()

---------------------------------------------------------------------------------------------------

Tipos Primitivos:

Interios
   byte   = 1byte / 0 a 255
   sbyte   = 1byte / -128 a 127
   shot   = 2byte / -32768 a 32767
   ushort   = 2byte / 0 a 65535
   int   = 4byte / -2147483648 a 214748367
   uint   = 4byte / 0 a 4294967295
   long   = 8byte / -9223372036854775808L to 9223372036854775807L
   ulong   = 8byte / 0 a 1844674407379551615

Caracteres
   char   = 2byte / Caractes delimitadas por aspas. EX: 'a', 'ç', 'o'
   string   = "Texto"

Reais
   float   = 4byte / Números até 10 elevado a 38
   double   = 8byte / Números até 10 elevado a 308
   decimal   = 16byte / Números com até 28 casas decimais

Logicos
   bool  =  true or false
   enum
   struct
   object

---------------------------------------------------------------------------------------------------

Números Aleatórios:   Random()

EX:  Random gerador = new Random();
     int n = gerador.Next(1, 4)

---------------------------------------------------------------------------------------------------

Data e Hora:   DateTime

EX:  int dia = DateTime.Now.Day;
     int mes = DateTime.Now.Month;
     int ano = DateTime.Now.Year;

---------------------------------------------------------------------------------------------------

OPERADORES RELACIONAIS:

Comparações Logicas
   n == n  igualdade
   n != n  diferença
   n > n   maior que
   n < n   menor que
   n >= n  maior ou igual a
   n <= n  menor ou igual a
   n is n  verificador de tipo  -  o retorno é sempre  true  ou  false

---------------------------------------------------------------------------------------------------

OPERADORES LÓGICOS:

Negação
   !  NÃO

Conjunção
   &&  E     As duas respostas tem que ser verdadeiro para dar  true

Disjunção
   ||  OU     Apenas uma resposta tem que ser verdadeiro para dar  true

---------------------------------------------------------------------------------------------------

OPERADOR CONDICIONAL:

Ternário
   expreção lógica ? true : false

   ex -   (altura <= 1.70) ? "baixa" : "alta"

---------------------------------------------------------------------------------------------------

Vetor:

string[] vogal = {"a", "e", "i", "o", "u"};
int[] num = {1, 2, 3, 4, 5};
float[] num = {1.2, 2.5, 3.1, 4.8, 5.5};
   
Ve se um valor tem no vetor
   vogal.Contains(valor)
   num.Contains(valor)

---------------------------------------------------------------------------------------------------

Repetições:

if / else is / else      se / se não se / se não
   if ()
   {
      Comando
   }
   else if ()
   {
      Comando
   }
   else
   {
      Comando
   }

for      para
   for (int i = 0; i < 10; i++)
   {
      Comando
   }

while      enquanto
   while ()
   {
      Comando
   }

---------------------------------------------------------------------------------------------------

Funções:

public static tipo NomeDaFunção() {}

---------------------------------------------------------------------------------------------------

Tentar/Erro:


Ler um arvivo

try
{
   string line = "";
   StreamReader sr = new StreamReader(arquivo);
   line= sr.ReadLine();
   while (line != null)
   {
      Console.WriteLine(line);
      line = sr.ReadLine();
   }
   sr.Close();
}
catch (Exception e)
{
   Console.WriteLine("Erro: " + e.Message);
}
Console.ReadKey();



Gravar texto

try
{
   StreamWriter sr = new StreamWriter(txt);
   sr.WriteLine();
   sr.Close();
}
catch (Exception e)
{
   Console.WriteLine("Erro: " + e.Message);
}
Console.ReadKey();