O que é o TypeScript?
   O TypeScript foi criado pela Microsoft para trazer um superset de tipagens para o JavaScript.
   A diferença entre o JavaScript e TypeScript é a sua tipagem que no JS não é obrigatório, já no TS é obrigatório, mas nem pra todos os casos. Algumas vantagens de utilizar o TS é que a sua adoção pode ocorrer de forma gradual em um projeto JavaScript.

---

Tipagem Explícita
   Na tipagem explícita nós especificamos o qual será o tipo de cada variável.

   EX:   function nomeDaFunção(user: string, ticket: number) {}

---

Any
   Ao declarar uma variável no TypeScript o seu tipo por padrão será any. Mas devemos tomar um certo cuidado com essa tipagem que ela pode ser perigosa ao decorrer do nosso projeto, não é muito recomendada a sua utilização.

Ex   let info: any;
	info = [123];
	info = 'João';
	info = true;
	info = 10.50;

// Com o tipo any a variável aceitará qualquer valor.

---

Inferência de tipos
   O TypeScript reconhece automaticamente o tipo da variável ao passar algum valor para ela.

---

Esses são os tipos primitivos que podemos utilizar no TypeScript:

	let loading: boolean;
	loading = false;

	let email: string;
	email = "joao@email.com";

	let price: number;
	price = 10.50;
	price = 10;

---

Union
   O Operador Union, representado pelo pipe |, nos permite adicionar mais de um tipo na variável.
   Dessa forma, podemos passar tanto number quanto string

---

Generics
   O generic no TypeScript nos permite reutilizar uma determinada implementação de código, de forma tipada. Para representar um generic.

   <S> → Representando State 
   <T> → Representando Type 
   <K> → Representando Key 
   <V> → Representando Value 
   <E> → Representando Element

---

Type
   Para não ficar sempre repetindo os tipos para todas as variáveis, então podemos criar uma atalho com o Types para cada uma delas.

---

Type Assertions
   Asserção de tipo normalmente é utilizado quando o TypeScript não sabe qual é a tipagem em um determinado objeto.

   Para contornarmos isso, podemos criar um type informando quais são as propriedades desse objeto. Como no exempla a seguir:
   type UserResponse = {
      id: number;
      name: string;
      avatar: string;
   }

let userResponse = {} as UserResponse;


