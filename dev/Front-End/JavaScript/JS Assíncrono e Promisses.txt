Sistema Síncrono
   Um sistema síncrono (synchronous) é uma tarefa que é concluída após a outra.
   Exemplo, uma imagem só carrega depois que a anterior termina de carregar. Ou seja, no sistema síncrono a tarefa anterior precisa ser concluída, para então iniciar a próxima.
   Por padrão, o JavaScript é um sistema síncrono

Sistema Assíncrono
   Num sistema assíncrono (asynchronous) as tarefas são executadas de maneira independente uma da outra.
   Exemplo, as imagens são carregadas de maneira independente, não é necessário esperar a primeira imagem carregar para iniciar o carregamento da próxima.
   O JavaScript poderá usar o assincronismo ao seu favor

Callback (chamar de volta)
   É uma função que é passada como argumento de outra função e depois de algum tempo ela é chamada de volta.

setTimeout() é uma função que recebe como argumento uma outra função e um tempo para ser executada.
   setTimeout(function, delay)
   A função de argumento do setTimeout é uma callback, ela vai executar depois de um certo tempo.

Promise
   É um objeto JavaScript com a promessa de que algo será realizado
   É usado para operações assíncronas
   Não bloqueia outras operações
   Essa promessa não significa que vai dar certo ou que vai dar errado.

   Uma promessa poderá ser:
      Pending: Estado inicial, assim que o objeto da promessa é iniciado
      Fulfilled: A promessa foi concluída com sucesso
      Rejected: A promessa foi rejeitada, houve um erro
      Settled: Seja com sucesso ou erro, ela foi finalmente concluída

   .then
      Devolve uma promise


Fetch()
   Fornece uma maneira fácil e lógica para buscar recursos de forma assíncrona através da rede.

Async / Await
   Maneira de escrever prmises
   Syntactic Sugar