TIPOS PRIMITIVOS:
   int     Números inteiros desde negativos a positivos
   float   Números com ponto(virgula) desde negativos a positivos
   bool    Valores  True  e  False
   str     Tudo que estiver entre  aspas  desde textos, numeros ou até mesmo um valor vazio


OPERADORES ARITMETICOS:
    +   Adição
    -   Subtração
    *   Multiplicação
    /   Divisão
   **   Potência
   //   Divição Inteira
    %   Resto da Divisão


ORDEM DE PRECEDÊNCIA:
   1° ()
   2° **
   3° *  /  //  %
   4° +  -


ESTRUTURA DE CONDIÇÕES:
   if
   elif
   else


COLRES:   \033[STYLE;TEXT;BACKm
   Style
      0   None
      1   Bold
      4   Underline
      7   Negative
   Text
      30   Branco
      31   Vermelho
      32   Verde
      33   Amarelho
      34   Azul
      35   Violeta
      36   Azul  Fraco
      37   Cinza
   Back
      40   Branco
      41   Vermelho
      42   Verde
      43   Amarelho
      44   Azul
      45   Violeta
      46   Azul  Fraco
      47   Cinza


ESTRUTURAS DE REPETIÇÃO:
   for - Usar quando eu sei quando acaba
   while - Usar quando eu não sei quando acaba
   
   break - Responsável por interromper um laço imediatamente


TUPLAS:
   tupla = ('A', 'B', 'C', 'D')
   TUPLAS SÃO IMUTAVEIS


LISTAS:
   lista = ['A', 'B', 'C', 'D']
   LISTAS SÃO MUTAVEIS
   Adicionando itens a Lista
      lista.append('valor')
   Adicionando em um lugar específico
      lista.insert(3, 'valor')
   Removendo da Lista
      del lista[4]
      lista.pop(4)
      nome.renove('valor')
   Colocando valores numerios em ordem
      lista.sort()
   Ver o tamanho da lista
      len(lista)
   Da para colocar uma Lista dentro da outra


DICIONÁRIOS:
   dicionario = {'chave': 'valor', 'chave': 'valor', 'chave': 'valor', 'chave': 'valor'}
   São personalizaveis
   Pegar os conteudos
      dicionario.values()
   Pegar as chaves
      dicionario.keys()
   Pegar os dois
      dicionario.items()
   Da para colocar um Dicionário dentro de uma Lista


FUNÇOES:
   def nomeFunção():


AJUDA INTERATIVA:
   help()


ERROS:
   try:                 Vai tentar fazer a operação
      operação
   except:              Se deu problema vai retornar a mensagem de erro   (posso ter varios except)
      falhou
   else:                Se deu certo vai retornar a operação   (opcional)
      deu certo
   finally:             Vai retornar algo independente se deu certo ou errado   (opcional)
      certo / falha