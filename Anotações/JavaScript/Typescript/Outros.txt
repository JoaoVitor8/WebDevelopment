Inference
  É um recurso do TypeScript que permite ao compilador inferir o tipo de uma variável, parâmetro de função ou retorno de função com base no valor atribuído ou retornado.
  Isso significa que em muitos casos, o TypeScript pode determinar automaticamente o tipo de uma variável sem que seja necessário definir explicitamente.

---------------------------------------------------------------------------------------------------

Generics
  O generic no TypeScript nos permite reutilizar uma determinada implementação de código, de forma tipada. Para representar um generic, nós declaramos ele dessa forma <J> (podendo ser utilizado qualquer outra letra), existem as convenções que podemos seguir:

  <S> → Representando State
  <T> → Representando Type
  <K> → Representando Key
  <V> → Representando Value
  <E> → Representando Element
  <P> → Representando Propriedades
  Entre outras ...

---------------------------------------------------------------------------------------------------

Type Utilities
  São recursos que permitem manipular e inspecionar tipos. Eles são usados ​​para criar tipos novos e mais complexos a partir de tipos existentes, como tipos opcionais, tipos parciais, tipos exclusivos e tipos intersecção

---------------------------------------------------------------------------------------------------

Decorators
  É uma funcionalidade que permite adicionar comportamentos adicionais a uma classe, método, propriedade ou parâmetro de função. Eles são implementados usando a sintaxe @decorator e podem ser usados ​​para adicionar funcionalidades, como controle de acesso, registro de log e validação de entrada de dados. Decorators são uma forma útil de separar a lógica de negócios da infraestrutura técnica de uma aplicação

  Resumo
    Oque é um Decorators?: É uma função
    Sintaxe: @nomeFunção()
    Porque usar?: Adicionar funcionalidade, Facilitar a leitura do código, Reutilização de código, Evitar a repetição de código, Integração com bibliotecas e frameworks
